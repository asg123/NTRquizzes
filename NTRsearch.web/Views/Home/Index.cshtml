@{
    ViewBag.Title = "Index";
}

<h1>Welcome to NTR search project!</h1>
<p>The goal of this website is to provide  a custom interface to Google search, and to store in a SQL server database a history of the queries performed by the users.</p>
<p>Feel free to use whatever external library you might need to solve the problems.</p>
<p>We expect you to <b>leverage the base and infrastructure classes already in place</b>. Please implement all the desired functionality trying to respect the current architecture. It may not be perfect, but we are looking for people able to adapt to existing practices and afterwards improve them. Feel free to jot down any improvement in the architecture you may think of. We will be glad to listen them!</p>

<h2>Important</h2>
<p>Look for the text "HINT" in the project source code files. Hints have been placed in strategic places throughout the project to make your task easier.</p>

<h2>Step 1: </h2>
<p>When a user enters some text in the textbox below and clicks 'Search', the application should show the first 5 Google result urls as clickable links. Only the urls. An example output is provided, feel free to modify as desired.</p>
<p><strong>We prefer ajax calls</strong>, but in the end it's up to you if you use an ajax call or a full page refresh. In any case, you will need to modify the HomeController and GoogleSearch classes.</p>
<h3>Hints:</h3>
<ul>
    <li>
    Try this URL: <a href="https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=Turing">https://ajax.googleapis.com/ajax/services/search/web?v=1.0&q=Turing</a>
    </li>
    <li>
    Have a look at the code snippet in the Stack Overflow answer here: <a href="http://stackoverflow.com/questions/2580396/google-searchapi-for-c-sharp">http://stackoverflow.com/questions/2580396/google-searchapi-for-c-sharp</a>
    </li>
    <li>
    Maybe you'll need to use this: <a href="http://msdn.microsoft.com/en-us/library/bb355316.aspx">http://msdn.microsoft.com/en-us/library/bb355316.aspx</a>
    </li>
    <li>
    Check this online tool to generate suitable classes from JSON payload: <a href="http://json2csharp.com/">http://json2csharp.com/</a>
    </li>
</ul>

<input type="text" /><button>Search!</button>
<div id="results">
    <div><a href="http://www.result.com/example">http://www.result.com/example</a></div>
    <div><a href="http://www.result.com/example">http://www.result.com/example</a></div>
    <div><a href="http://www.result.com/example">http://www.result.com/example</a></div>
    <div><a href="http://www.result.com/example">http://www.result.com/example</a></div>
    <div><a href="http://www.result.com/example">http://www.result.com/example</a></div>
</div>

<h2>Step 2: </h2>
<p>We want to keep historic information on what queries are performed by our users. So, every search performed by our application must be saved in a SQL server database. The first results obtained (only the first) should also be saved into the database.</p>
<h3>Hints:</h3>
<ul>
    <li>
    You will need to modify the HomeController class and use QueryService.SaveQuery method.
    </li>
    <li>
    By default, the database used is .\SQLEXPRESS\NTRsearchDB. You can connect to it with the SQL Server Management Studio or the Database explorer in VS2010 through integrated authentication.
    </li>
    <li>
    If you get problems because the database or any table already existed feel free to remove it so EF automatically re-creates it. We don't care about migrations or database upgrades.
    </li>
</ul>

<h2>Step 3: </h2>
<p>This page should show the last 5 queries submitted by the users and their corresponding first result. List them in a comprehensible way, but don't think too much about a nice design. Some kind of list or table will suffice. An example output is provided, feel free to modify and improve it.</p>
<h3>Hints:</h3>
<ul>
    <li>
    You will need to modify the HomeController and QueryService classes. It's up to you if you use an ajax call or a full page refresh, but maybe this decision is linked to the one you did back in step 1.    
    </li>
</ul>

<button>Refresh history</button>
<div id="historic">
    <div class="historicItem">
        <h3 class="historicTitle">Search Text: 'cats' Time: 01/01/2012 15:00</h3>
        <div class="firstResult" style="padding-left:20px">
            <a href="http://www.result.com/example">http://www.result.com/example</a>
        </div>
    </div>
    <div class="historicItem">
        <h3 class="historicTitle">Search Text: 'dogs' Time: 01/01/2012 13:00</h3>
        <div class="firstResult" style="padding-left:20px">
            <a href="http://www.result.com/example">http://www.result.com/example</a>
        </div>
    </div>
</div>

<p></p>
<p></p>
